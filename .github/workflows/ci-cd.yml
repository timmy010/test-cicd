name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Copy files to VPS
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /var/www/html"
        scp -o StrictHostKeyChecking=no -r ./docker-compose.yml ./nginx.conf ./app ./fpm ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/html/

    - name: Set permissions on VPS
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
          sudo chown -R www-data:www-data /var/www/html
          sudo chmod -R 755 /var/www/html/app/tests
          sudo find /var/www/html/app/tests -type f -exec chmod 644 {} \;
        "
    
    - name: Export env
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
          export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          export POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}
          export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        "

    - name: Deploy with Docker Compose
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
          cd /var/www/html && docker-compose down && docker-compose up -d || docker-compose up --build -d
        "

  # run-tests:
  #   runs-on: ubuntu-latest
  #   needs: deploy

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install SSH key
  #       uses: shimataro/ssh-key-action@v2
  #       with:
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

  #     - name: Run tests in php_app container
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
  #           cd /var/www/html && docker exec php_app ./vendor/bin/phpunit tests
  #         "