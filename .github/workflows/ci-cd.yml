name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
      ADMIN_USER_EMAIL: ${{ secrets.ADMIN_USER_EMAIL }}
      ADMIN_USER_PASSWORD: ${{ secrets.ADMIN_USER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for changes in composer.json
        id: check-composer
        run: |
          git diff --quiet HEAD^ HEAD -- composer.json composer.lock Dockerfile docker-compose.prod.yml || echo "composer_changed=true" >> $GITHUB_OUTPUT

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Copy files to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /var/www/html"
          scp -o StrictHostKeyChecking=no -r ./docker-compose.prod.yml ./nginx.conf ./app ./fpm ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/html/

      - name: Set permissions on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            sudo chown -R www-data:www-data /var/www/html
            sudo chmod -R 755 /var/www/html/app/tests
            sudo find /var/www/html/app/tests -type f -exec chmod 644 {} \;
          "

      - name: Deploy with Docker Compose
        run: |
          if ${{ steps.check-composer.outputs.composer_changed == 'true' }}; then
            ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
              cd /var/www/html && docker-compose -f docker-compose.prod.yml down && docker-compose -f docker-compose.prod.yml up --build -d
            "
          else
            ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
              cd /var/www/html && docker-compose -f docker-compose.prod.yml down && docker-compose -f docker-compose.prod.yml up -d
            "
          fi